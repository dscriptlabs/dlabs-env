name: NPM Publish

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm ci

      - name: Configure git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Verify NPM Token
        run: |
          if [ -z "$NODE_AUTH_TOKEN" ]; then
            echo "Error: NPM_TOKEN is not set in repository secrets"
            exit 1
          fi
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          if ! npm whoami; then
            echo "Error: Invalid NPM_TOKEN"
            exit 1
          fi
          echo "NPM Token verified successfully"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build and Publish to NPM
        if: success()
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Publishing version: $CURRENT_VERSION"
          npm run build
          npm publish --access public
          echo "version=$CURRENT_VERSION" >> $GITHUB_ENV
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate Release Notes
        if: success()
        run: |
          # Get the last tag
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          if [ -z "$LAST_TAG" ]; then
            # If no previous tag exists, get all commits
            RELEASE_BODY="## 🚀 First Release v${{ env.version }}\n\n### 📝 Commit History\n"
            RELEASE_BODY+=$(git log --pretty=format:"* %s (%h)%n")
          else
            # Get commits since last tag
            RELEASE_BODY="## 🚀 Release v${{ env.version }}\n\n### 📝 Changes since ${LAST_TAG}\n"
            RELEASE_BODY+=$(git log "$LAST_TAG"..HEAD --pretty=format:"* %s (%h)%n")
          fi

          # Escape multiline string for GitHub Actions
          RELEASE_BODY="${RELEASE_BODY//'%'/'%25'}"
          RELEASE_BODY="${RELEASE_BODY//$'\n'/'%0A'}"
          RELEASE_BODY="${RELEASE_BODY//$'\r'/'%0D'}"

          echo "RELEASE_BODY=$RELEASE_BODY" >> $GITHUB_ENV

      - name: Push version changes
        if: success()
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git push --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        if: success()
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.version }}
          release_name: Release v${{ env.version }}
          draft: false
          prerelease: false
          body: ${{ env.RELEASE_BODY }}
